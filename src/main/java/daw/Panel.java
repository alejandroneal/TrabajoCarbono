/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package daw;

import com.fasterxml.jackson.core.JsonProcessingException;
import conexion_http.ConexionHTTP;
import java.awt.Color;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import modelos.Carbono;
import serviciojson.JsonService;

/**
 *
 * Enlaces para probar:
 * -Normal: www.riverford.co.uk/
 * -Bueno: rights4children.org.uk/
 * -Mal: maralboran.eu
 */
public class Panel extends javax.swing.JFrame {

    /**
     * Creates new form Panel
     */
    public Panel() {
        initComponents();
        setResizable(false);
        setTitle("Medidor de huella de carbono");
        
        setLocationRelativeTo(null);
        
        botonTransparente(botonBusqueda);
        botonTransparente(botonInfo);
    }
    
    //Método para poner un botón transparente
    private void botonTransparente(JButton boton){
        boton.setFocusPainted(false);
        boton.setContentAreaFilled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameInfo = new javax.swing.JFrame();
        panelInfo = new javax.swing.JPanel();
        labelTituloInfo = new javax.swing.JLabel();
        labelTextoInfo = new javax.swing.JLabel();
        labelImgInfo = new javax.swing.JLabel();
        panelPrincipal = new javax.swing.JPanel();
        botonBusqueda = new javax.swing.JButton();
        textoRuta = new javax.swing.JTextField();
        labelTitulo = new javax.swing.JLabel();
        labelGif = new javax.swing.JLabel();
        labelTexto = new javax.swing.JLabel();
        labelTextoWeb = new javax.swing.JLabel();
        labelEnlaceWeb = new javax.swing.JLabel();
        botonInfo = new javax.swing.JButton();
        labelFondo = new javax.swing.JLabel();

        panelInfo.setBackground(new java.awt.Color(88, 176, 250));
        panelInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTituloInfo.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        labelTituloInfo.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloInfo.setText("¿QUÉ ES LA HUELLA DE CARBONO?");
        panelInfo.add(labelTituloInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 550, 40));

        labelTextoInfo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        labelTextoInfo.setForeground(new java.awt.Color(255, 255, 255));
        labelTextoInfo.setText("<html>\nLa <span style='color: red'>huella de carbono</span> representa el volumen total de <span style='color: red'>gases de efecto invernadero</span> que producen las \nactividades económicas y cotidianas del ser humano.<br>\nCada vez que cargamos viajamos en coche, cargamos el teléfono o ponemos una lavadora, dejamos atrás una\nestela de gases que se acumulan en la atmósfera y sobrecalienta el planeta.\n<p>\n<br>\nEn está aplicación lo que hacemos es gracias a la página www.websitecarbon.com calcular las emisiones\nde carbono atribuidas a un sitio web para ayudar a <span style='color: green'>crear conciencia</span> e inspìrar a un <span style='color: green'>internet más sostenible</span>\n</p>\n</html>");
        panelInfo.add(labelTextoInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 530, -1));

        labelImgInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nubeCientifica2.png"))); // NOI18N
        panelInfo.add(labelImgInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, -1, -1));

        javax.swing.GroupLayout frameInfoLayout = new javax.swing.GroupLayout(frameInfo.getContentPane());
        frameInfo.getContentPane().setLayout(frameInfoLayout);
        frameInfoLayout.setHorizontalGroup(
            frameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        frameInfoLayout.setVerticalGroup(
            frameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelPrincipal.setBackground(new java.awt.Color(255, 216, 211));
        panelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonBusqueda.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        botonBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        botonBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nubeBoton.png"))); // NOI18N
        botonBusqueda.setText("Buscar");
        botonBusqueda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBusquedaActionPerformed(evt);
            }
        });
        panelPrincipal.add(botonBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 420, 160, 50));

        textoRuta.setBackground(new java.awt.Color(255, 215, 228));
        textoRuta.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        textoRuta.setForeground(new java.awt.Color(153, 153, 153));
        textoRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textoRuta.setText("Introduce una URL...");
        textoRuta.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        textoRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                textoRutaMousePressed(evt);
            }
        });
        textoRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoRutaActionPerformed(evt);
            }
        });
        textoRuta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textoRutaKeyPressed(evt);
            }
        });
        panelPrincipal.add(textoRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 427, 50));

        labelTitulo.setBackground(new java.awt.Color(58, 58, 58));
        labelTitulo.setFont(new java.awt.Font("Chilanka", 1, 35)); // NOI18N
        labelTitulo.setForeground(new java.awt.Color(0, 0, 0));
        labelTitulo.setText("MEDIDOR DE HUELLA DE CARBONO");
        panelPrincipal.add(labelTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 610, 52));

        labelGif.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelGif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nubes.gif"))); // NOI18N
        panelPrincipal.add(labelGif, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 6, -1, 184));

        labelTexto.setFont(new java.awt.Font("Chilanka", 0, 22)); // NOI18N
        labelTexto.setForeground(new java.awt.Color(51, 51, 51));
        labelTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTexto.setText("<html> <p>Las búsquedas en internet requieren de </p> <p>cierta energía y algunas de ellas consumen <p> mucha, lo que genera contaminación.</p> <p>Inserta el enlace de una página y te  </p> <p>mostraremos la huella de carbono que</p> <p>deja tu búsqueda.</p> </html> ");
        labelTexto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelPrincipal.add(labelTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 590, 270));

        labelTextoWeb.setFont(new java.awt.Font("Chilanka", 1, 15)); // NOI18N
        labelTextoWeb.setForeground(new java.awt.Color(51, 51, 51));
        labelTextoWeb.setText("Estamos utilizando la página web ");
        panelPrincipal.add(labelTextoWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 570, -1, -1));

        labelEnlaceWeb.setFont(new java.awt.Font("Chilanka", 1, 15)); // NOI18N
        labelEnlaceWeb.setForeground(new java.awt.Color(51, 51, 51));
        labelEnlaceWeb.setText("<html><a href=\"www.websitecarbon.com\">www.websitecarbon.com</a></html>");
        labelEnlaceWeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelEnlaceWebMouseClicked(evt);
            }
        });
        panelPrincipal.add(labelEnlaceWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 570, -1, -1));

        botonInfo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        botonInfo.setForeground(new java.awt.Color(255, 255, 255));
        botonInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/lupaInfo.png"))); // NOI18N
        botonInfo.setText("Info");
        botonInfo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        botonInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonInfoMouseClicked(evt);
            }
        });
        botonInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInfoActionPerformed(evt);
            }
        });
        panelPrincipal.add(botonInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 110, 50));

        labelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo.png"))); // NOI18N
        panelPrincipal.add(labelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Método para realizar la busqueda deseada
    private void botonBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBusquedaActionPerformed

        final String LINK = "https://api.websitecarbon.com/site?url=";
        //El texto que introduce el usuario en el text field
        String ruta = this.textoRuta.getText();
        String ultimo = LINK + ruta;

        String http = null;
        try {
            //Guarda en el string el contenido de la página web introducida que tiene 
            //formato json
            http = ConexionHTTP.peticionHttpGet(ultimo);
        } catch (IOException ex) {
            this.labelTexto.setText("La página introducida no existe");
            Logger.getLogger(Panel.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            //json obtenido del enlace anterior
            Carbono carbono = (Carbono) JsonService.stringToPojo(http, Carbono.class);
            //Método que modifica el panel según el resultado del json
            modificarPanel(carbono, ruta);
        } catch (JsonProcessingException ex) {
            Logger.getLogger(Panel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botonBusquedaActionPerformed

    //Método que cambia la apariencia del panel según el resultado
    private void modificarPanel(Carbono carbono, String ruta){
        
        // Variables de cada imagen 
        ImageIcon fondoMalo = new ImageIcon("src/main/resources/img/fondoMalo.png");
        ImageIcon fondoNormal = new ImageIcon("src/main/resources/img/fondoNormal.png");
        ImageIcon fondoBueno = new ImageIcon("src/main/resources/img/fondoBueno2.jpeg");
        ImageIcon imgNubeNormal = new ImageIcon("src/main/resources/img/nubeNormal.png");
        ImageIcon imgNubeTriste = new ImageIcon("src/main/resources/img/nubeTriste.png");
        ImageIcon imgNubeFeliz = new ImageIcon("src/main/resources/img/nubeFeliz.png");
       
        
        if (carbono.getCleanerThan() <= 0.33) {
                // Esto significa que es malo
                //Cambio del fondo y de la imagen del panel
                labelGif.setIcon(imgNubeTriste);
                labelFondo.setIcon(fondoMalo);
               
                labelTitulo.setForeground(Color.black);
                labelTexto.setForeground(Color.DARK_GRAY);
                
                textoRuta.setBackground(new Color(54, 223, 196));
                textoRuta.setForeground(Color.DARK_GRAY);
               
                //Redondeo de los gramos emitidos por la búsqueda
                double redondeo = (double)(Math.round(carbono.getStatistics().getCo2().getGrid().getGrams()*100))/100;
                // StringBuilder para cambiar el mensaje de texto del labelTexto
                StringBuilder sb = new StringBuilder();
                sb.append("<html><body>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append(ruta);
                sb.append("<br>&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append("Está página contamina más que el ");
                sb.append("<span style='color: red;'><b>");
                sb.append(100 - carbono.getCleanerThan()*100);
                sb.append(" %</b></span>");
                sb.append(" del resto de &nbsp;&nbsp;&nbsp;&nbsp;páginas testeadas<br>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;En esta página se ha consumido: <br> <span style='color: red;'><b>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append(redondeo);
                sb.append("</b></span> gramos de CO2<br><br>");
                sb.append("<span style='color: red;'><b>&nbsp;&nbsp;&nbsp;&nbsp;La contaminación de la página "
                        + "está por encima de la &nbsp;&nbsp;&nbsp;&nbsp;media</b></span>");
                sb.append("</body></html>");
               
                labelTexto.setText(sb.toString());
               
            } else if (carbono.getCleanerThan() > 0.33 && carbono.getCleanerThan() <= 0.66) {
                // Esto significa que es normal
                //Cambio del fondo y de la imagen del panel
                labelFondo.setIcon(fondoNormal);
                labelGif.setIcon(imgNubeNormal);
                textoRuta.setBackground(new Color(247, 196, 164));
                textoRuta.setForeground(Color.DARK_GRAY);
               
                //Redondeo de los gramos emitidos por la búsqueda
                double redondeo = (double)(Math.round(carbono.getStatistics().getCo2().getGrid().getGrams()*100))/100;
                // StringBuilder para cambiar el mensaje de texto del labelTexto
                StringBuilder sb = new StringBuilder();
                sb.append("<html><body>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append(ruta);
                sb.append("<br>&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append("Está página contamina más que el ");
                sb.append("<span style='color: yellow;'><b>");
                sb.append(100 - carbono.getCleanerThan()*100);
                sb.append(" %</b></span>");
                sb.append(" del resto de &nbsp;&nbsp;&nbsp;&nbsp;páginas testeadas<br>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;En esta página se ha consumido: <br> <span style='color: yellow;'><b>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append(redondeo);
                sb.append("</b></span> gramos de CO2<br><br>");
                sb.append("<span style='color: yellow;'><b>&nbsp;&nbsp;&nbsp;&nbsp;La contaminación de la página está en la media<b></span>");
                sb.append("</body></html>");
               
                labelTexto.setText(sb.toString());
               
            } else {
                // Esto significa que está bueno
                labelFondo.setIcon(fondoBueno);
                labelGif.setIcon(imgNubeFeliz);
                labelGif.setSize(275, 275);
                textoRuta.setBackground(new Color(131, 219, 255));
                textoRuta.setForeground(Color.DARK_GRAY);
               
                 //Redondeo de los gramos emitidos por la búsqueda
                double redondeo = (double)(Math.round(carbono.getStatistics().getCo2().getGrid().getGrams()*100))/100;
                // StringBuilder para cambiar el mensaje de texto del labelTexto
                StringBuilder sb = new StringBuilder();
                sb.append("<html><body>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append(ruta);
                sb.append("<br>&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append("Está página contamina más que el ");
                sb.append("<span style='color: green;'><b>");
                sb.append(100 - carbono.getCleanerThan()*100);
                sb.append(" %</b></span>");
                sb.append(" del resto de &nbsp;&nbsp;&nbsp;&nbsp;páginas testeadas<br>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;En esta página se ha consumido: <br> <span style='color: green;'><b>");
                sb.append("&nbsp;&nbsp;&nbsp;&nbsp;");
                sb.append(redondeo);
                sb.append("</b></span> gramos de CO2<br><br>");
                sb.append("<span style='color: green;'><b>&nbsp;&nbsp;&nbsp;&nbsp;Esta página contamina muy "
                        + "poco comparado con el &nbsp;&nbsp;&nbsp;&nbsp;resto<b></span>");
                sb.append("</body></html>");
               
                labelTexto.setText(sb.toString());
            }
    }
    
    private void textoRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoRutaActionPerformed

    }//GEN-LAST:event_textoRutaActionPerformed

    //Método que al pulsar con el ratón sobre el textField borra el texto de serie
    //y cambia el color de la letra
    private void textoRutaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textoRutaMousePressed
        if (textoRuta.getText().equalsIgnoreCase("Introduce una URL...")) {
            textoRuta.setText("");
            textoRuta.setForeground(Color.DARK_GRAY);
            textoRuta.getInsets().left = 10;
        }
    }//GEN-LAST:event_textoRutaMousePressed

    //Método que al pulsar sobre el enlace te redirecciona en tu buscador por defecto
    //a la página del enlace
    private void labelEnlaceWebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelEnlaceWebMouseClicked
        try {
            Desktop.getDesktop().browse(new URI("https://www.websitecarbon.com"));
        } catch (URISyntaxException | IOException ex) {
            System.out.println("Error al abrir la página");
        }
    }//GEN-LAST:event_labelEnlaceWebMouseClicked

    //Método que interactua cuando el usuario escribe en el textField
    private void textoRutaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoRutaKeyPressed
        //Guardo el último caracter pulsado
        char c = (char)evt.getKeyChar();
        //Si la tecla que ha pulsado es enter activa el evento de pulsar el ratón
        if (c == evt.VK_ENTER) {
            botonBusqueda.doClick();
        }
        //Si el texto del textField es igual al texto de serie, si pulsamos una tecla este se borra
        //y cambia el color de la letra
        if (textoRuta.getText().equalsIgnoreCase("Introduce una URL...")) {
            textoRuta.setText("");
            textoRuta.setForeground(Color.DARK_GRAY);
            textoRuta.getInsets().left = 10;
        }
        
    }//GEN-LAST:event_textoRutaKeyPressed

   
    private void botonInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonInfoMouseClicked

    }//GEN-LAST:event_botonInfoMouseClicked
    
    //Método que al pulsar el botón de info despliega un jframe
    private void botonInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInfoActionPerformed
        frameInfo.setTitle("¿QUÉ ES LA HUELLA DE CARBONO?");
        frameInfo.setSize(750,450);
        frameInfo.setVisible(true);
        frameInfo.setResizable(false);
    }//GEN-LAST:event_botonInfoActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Panel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBusqueda;
    private javax.swing.JButton botonInfo;
    private javax.swing.JFrame frameInfo;
    private javax.swing.JLabel labelEnlaceWeb;
    private javax.swing.JLabel labelFondo;
    public static javax.swing.JLabel labelGif;
    private javax.swing.JLabel labelImgInfo;
    private javax.swing.JLabel labelTexto;
    private javax.swing.JLabel labelTextoInfo;
    private javax.swing.JLabel labelTextoWeb;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTituloInfo;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextField textoRuta;
    // End of variables declaration//GEN-END:variables
}
